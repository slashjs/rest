"use strict";

/**
 * Mostly taken from https://github.com/abalabahaha/eris/blob/master/lib/rest/Endpoints.js
 *
 * Removed User-only endpoints
 * @private
 */

import Constants from "./Constants";

export = {
    BASE_URL: "/api/v" + Constants.REST_API_VERSION,
    BASE_HOST: "https://discord.com",
    CDN_URL: "https://cdn.discordapp.com",

    APPLICATION_COMMAND: (appID: string, cmdID: string) => `/applications/${appID}/commands/${cmdID}`,
    APPLICATION_COMMAND_PERMISSIONS: (appID: string, guildID: string, cmdID: string) => `/applications/${appID}/guilds/${guildID}/commands/${cmdID}/permissions`,
    APPLICATION_COMMANDS: (appID: string) => `/applications/${appID}/commands`,
    APPLICATION_GUILD_COMMAND: (appID: string, guildID: string, cmdID: string) => `/applications/${appID}/guilds/${guildID}/commands/${cmdID}`,
    APPLICATION_GUILD_COMMANDS: (appID: string, guildID: string) => `/applications/${appID}/guilds/${guildID}/commands`,
    CHANNEL: (chanID: string) => `/channels/${chanID}`,
    CHANNEL_BULK_DELETE: (chanID: string) => `/channels/${chanID}/messages/bulk-delete`,
    CHANNEL_INVITES: (chanID: string) => `/channels/${chanID}/invites`,
    CHANNEL_MESSAGE: (chanID: string, msgID: string) => `/channels/${chanID}/messages/${msgID}`,
    CHANNEL_MESSAGE_CROSSPOST: (chanID: string, msgID: string) => `/channels/${chanID}/messages/${msgID}/crosspost`,
    CHANNEL_MESSAGE_REACTION: (chanID: string, msgID: string, reaction: string) => `/channels/${chanID}/messages/${msgID}/reactions/${reaction}`,
    CHANNEL_MESSAGE_REACTION_USER: (chanID: string, msgID: string, reaction: string, userID: string) => `/channels/${chanID}/messages/${msgID}/reactions/${reaction}/${userID}`,
    CHANNEL_MESSAGE_REACTIONS: (chanID: string, msgID: string) => `/channels/${chanID}/messages/${msgID}/reactions`,
    CHANNEL_MESSAGE_THREADS: (chanID: string, msgID: string) => `/channels/${chanID}/messages/${msgID}/threads`,
    CHANNEL_MESSAGES: (chanID: string) => `/channels/${chanID}/messages`,
    CHANNEL_PERMISSION: (chanID: string, overID: string) => `/channels/${chanID}/permissions/${overID}`,
    CHANNEL_PERMISSIONS: (chanID: string) => `/channels/${chanID}/permissions`,
    CHANNEL_PIN: (chanID: string, msgID: string) => `/channels/${chanID}/pins/${msgID}`,
    CHANNEL_PINS: (chanID: string) => `/channels/${chanID}/pins`,
    CHANNEL_RECIPIENT: (groupID: string, userID: string) => `/channels/${groupID}/recipients/${userID}`,
    CHANNEL_THREADS: (chanID: string) => `/channels/${chanID}/threads`,
    CHANNEL_THREAD_MEMBER: (chanID: string, memberID: string) => `/channels/${chanID}/thread-members/${memberID}`,
    CHANNEL_THREAD_MEMBERS: (chanID: string) => `/channels/${chanID}/thread-members`,
    CHANNEL_THREADS_ARCHIVED_PRIVATE: (chanID: string) => `/channels/${chanID}/threads/archived/private`,
    CHANNEL_THREADS_ARCHIVED_PRIVATE_USER: (chanID: string) => `/channels/${chanID}/users/@me/threads/archived/private`,
    CHANNEL_THREADS_ARCHIVED_PUBLIC: (chanID: string) => `/channels/${chanID}/threads/archived/public`,
    CHANNEL_TYPING: (chanID: string) => `/channels/${chanID}/typing`,
    CHANNEL_WEBHOOKS: (chanID: string) => `/channels/${chanID}/webhooks`,
    CHANNELS: "/channels",
    GATEWAY: "/gateway",
    GATEWAY_BOT: "/gateway/bot",
    GUILD: (guildID: string) => `/guilds/${guildID}`,
    GUILD_APPLICATION_COMMAND_PERMISSIONS: (appID: string, guildID: string) => `/applications/${appID}/guilds/${guildID}/commands/permissions`,
    GUILD_AUDIT_LOGS: (guildID: string) => `/guilds/${guildID}/audit-logs`,
    GUILD_BAN: (guildID: string, memberID: string) => `/guilds/${guildID}/bans/${memberID}`,
    GUILD_BANS: (guildID: string) => `/guilds/${guildID}/bans`,
    GUILD_CHANNELS: (guildID: string) => `/guilds/${guildID}/channels`,
    GUILD_EMOJI: (guildID: string, emojiID: string) => `/guilds/${guildID}/emojis/${emojiID}`,
    GUILD_EMOJIS: (guildID: string) => `/guilds/${guildID}/emojis`,
    GUILD_INVITES: (guildID: string) => `/guilds/${guildID}/invites`,
    GUILD_INTEGRATION: (guildID: string, integrationID: string) => `/guilds/${guildID}/integrations/${integrationID}`,
    GUILD_INTEGRATIONS: (guildID: string) => `/guilds/${guildID}/integrations`,
    GUILD_MEMBER: (guildID: string, memberID: string) => `/guilds/${guildID}/members/${memberID}`,
    GUILD_MEMBER_NICK: (guildID: string, memberID: string) => `/guilds/${guildID}/members/${memberID}/nick`,
    GUILD_MEMBER_ROLE: (guildID: string, memberID: string, roleID: string) => `/guilds/${guildID}/members/${memberID}/roles/${roleID}`,
    GUILD_MEMBERS: (guildID: string) => `/guilds/${guildID}/members`,
    GUILD_MEMBERS_SEARCH: (guildID: string) => `/guilds/${guildID}/members/search`,
    GUILD_PREVIEW: (guildID: string) => `/guilds/${guildID}/preview`,
    GUILD_PRUNE: (guildID: string) => `/guilds/${guildID}/prune`,
    GUILD_ROLE: (guildID: string, roleID: string) => `/guilds/${guildID}/roles/${roleID}`,
    GUILD_ROLES: (guildID: string) => `/guilds/${guildID}/roles`,
    GUILD_STICKER: (guildID: string, stickerID: string) => `/guilds/${guildID}/stickers/${stickerID}`,
    GUILD_STICKERS: (guildID: string) => `/guilds/${guildID}/stickers`,
    GUILD_TEMPLATE: (guildID: string, code: string) => `/guilds/${guildID}/templates/${code}`,
    GUILD_THREADS_ACTIVE: (guildID: string) => `/guilds/${guildID}/threads/active`,
    GUILD_TEMPLATES: (guildID: string) => `/guilds/${guildID}/templates`,
    GUILD_VANITY: (guildID: string) => `/guilds/${guildID}/vanity-url`,
    GUILD_VOICE_REGIONS: (guildID: string) => `/guilds/${guildID}/regions`,
    GUILD_VOICE_STATE_USER: (guildID: string, memberID: string) => `/guilds/${guildID}/voice-states/${memberID}`,
    GUILD_WEBHOOKS: (guildID: string) => `/guilds/${guildID}/webhooks`,
    GUILD_WELCOME_SCREEN: (guildID: string) => `/guilds/${guildID}/welcome-screen`,
    GUILD_WIDGET: (guildID: string) => `/guilds/${guildID}/widget.json`,
    GUILD_WIDGET_IMAGE: (guildID: string) => `/guilds/${guildID}/widget.png`,
    GUILD_WIDGET_SETTINGS: (guildID: string) => `/guilds/${guildID}/widget`,
    GUILDS: "/guilds",
    INTERACTION_CALLBACK: (interactionID: string, token: string) => `/interactions/${interactionID}/${token}/callback`,
    INVITE: (inviteID: string) => `/invite/${inviteID}`,
    OAUTH2_APPLICATION: (appID: string) => `/oauth2/applications/${appID}`,
    STAGE_INSTANCE_CHANNEL: (chanID: string) => `/stage-instances/${chanID}`,
    STAGE_INSTANCES: "/stage-instances",
    STICKER: (stickerID: string) => `/stickers/${stickerID}`,
    TEMPLATE: (code: string) => `/guilds/templates/${code}`,
    USER: (userID: string) => `/users/${userID}`,
    USER_CHANNELS: (userID: string) => `/users/${userID}/channels`,
    USER_GUILD: (userID: string, guildID: string) => `/users/${userID}/guilds/${guildID}`,
    USER_GUILDS: (userID: string) => `/users/${userID}/guilds`,
    USERS: "/users",
    VOICE_REGIONS: "/voice/regions",
    WEBHOOK: (hookID: string) => `/webhooks/${hookID}`,
    WEBHOOK_TOKEN: (hookID: string, token: string) => `/webhooks/${hookID}/${token}`,
    WEBHOOK_TOKEN_GITHUB: (hookID: string, token: string) => `/webhooks/${hookID}/${token}/github`,
    WEBHOOK_TOKEN_MESSAGE: (hookID: string, token: string, msgID: string) => `/webhooks/${hookID}/${token}/messages/${msgID}`,
    WEBHOOK_TOKEN_SLACK: (hookID: string, token: string) => `/webhooks/${hookID}/${token}/slack`,
};
